Lab Testing
===========

Multiple test on CACBC-Lab' machines 

Basic Program Testing
---------------------
1. **Open basic programs** and ensure they launch without issues:
   - Click on the application menu or press the shortcut keys.
   - Search for each of the following programs: Firefox, Terminal, Inkscape, and R.
   - Click on each program to open it.
   - Verify that each program starts successfully without errors.
   - Close each program after confirming it works.

User Folder Testing
^^^^^^^^^^^^^^^^^^^
1. **Open Terminal and navigate to the user folder:**

   .. code-block:: console

      Ctrl + Alt + T  # Open the terminal
      cd ~            # Move to the home directory

2. **Create a new folder:**

   .. code-block:: console

      mkdir test_folder  # Create a new folder
      ls                # Verify the folder was created

3. **Delete files:**

   .. code-block:: console

      touch test_file.txt  # Create a test file
      rm test_file.txt     # Remove the file
      ls                   # Confirm deletion

.. important::
   If `rm` does not work due to permission issues, try using:

   .. code-block:: console

      sudo rm test_file.txt

4. **Modify files using VSCode:**

   .. code-block:: console

      code .  # Open VSCode

   - Create a new file, write some text, save the file, and close VSCode.

.. important::
   If VSCode is not installed, install it using:

   .. code-block:: console

      sudo snap install code --classic

5. **Test file permissions:**

   .. code-block:: console

      touch restricted_file.txt      # Create a test file
      chmod 600 restricted_file.txt  # Restrict access

   - Switch to another user and try to modify or delete the file.
   - Verify that the file is protected.

Conda Environment and ViennaRNA Testing
---------------------------------------

1. **Create a test Conda environment:**

   .. code-block:: console

      # Open the terminal
      conda create --name test_env -c conda-forge # Create the environment
      conda activate test_env  # Activate the environment

.. important::
   If Conda is not installed, install Miniconda with:

   .. code-block:: console

      wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh
      bash Miniforge3-Linux-x86_64.sh

2. **Install ViennaRNA:**

   .. code-block:: console

      conda install -c bioconda viennarna # Install ViennaRNA
      RNAfold --version  # Confirm the installation

.. important::
   If installation fails, ensure the Bioconda channel is configured:

   .. code-block:: console

      conda config --add channels bioconda

3. **Fold an RNA sequence and calculate MFE using Python:**

   .. code-block:: console

      python  # Open Python in the terminal

   .. code-block:: python

      import RNA
      sequence = "CUACGGCGCGGCGCCCUUGGCGA"
      mfe_structure, mfe = RNA.fold(sequence)
      print(f"MFE Structure: {mfe_structure}")
      print(f"MFE Value: {mfe} kcal/mol")


R Configuration in Visual Studio Code
-------------------------------------

This tutorial guides you through setting up R in Visual Studio Code (VS Code).

Prerequisites
^^^^^^^^^^^^^
- **R Installation**: Ensure R (version 3.4.0 or higher) is installed on your system. You can download it from the `CRAN website <https://cran.r-project.org/>`_. 

Steps
^^^^^

1. **To install the R extension in VSCode**:

   - Click the Extensions tab in the left sidebar, search for R, and click Install. 
   - Once it’s installed, you’ll want to set up a few settings to get R set up for your conda environment. Click the gear icon in the R extension pane, and click Extension Settings. Modify the Rpath.

2. **Install the R Language Server**:

   - Open your R console.
   - Install the `languageserver` package by running:

     .. code-block:: r

        install.packages("languageserver")

3. **Install the R Extension in VS Code**:

   - Navigate to the Extensions view by clicking on the square icon in the sidebar or pressing `Ctrl+Shift+X`.
   - In the search bar, type "R" and select the extension named "R" authored by Yuki Ueda.
   - Click 'Install' to add the extension to VS Code.

4. **Enhance the R experience in VSCode (Optional)**:
   
   - **Radian**: A modern R console that offers features like syntax highlighting and auto-completion. Install Radian by running:

    .. code-block:: r

        install.packages("radian")

   - **httpgd**: An R package that provides a graphics device serving SVG graphics via HTTP and WebSockets, useful for interactive plot viewing in VS Code. Install httpgd by running:

    .. code-block:: r

        install.packages("httpgd")

5. **Running R Code in VS Code**:

   - Open or create an R script (`.R` file) in VS Code.
   - To run a line of code, place the cursor on the line and press `Ctrl+Enter`. The code will execute in the integrated R terminal.
   - To run the entire script, press `Ctrl+Shift+S`.

6. **Additional Features**:

   - **Code Completion (IntelliSense)**: VS Code provides code suggestions and documentation as you type, enhancing coding efficiency.
   - **Linting**: The extension checks your code for potential errors and style issues, helping maintain code quality.
   - **Workspace Viewer**: View your R environment, including variables and functions, directly within VS Code.
   - **Debugging**: With the R Debugger extension, you can set breakpoints and step through your code to identify issues.

For a comprehensive guide and troubleshooting, refer to the `official VS Code R documentation <https://code.visualstudio.com/docs/languages/r>`_.

Installing RStudio in a Conda Environment
-----------------------------------------

This guide describes the steps to install R and RStudio within a Conda environment using `conda-forge`.

Creating the Conda Environment
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

1. **Open a terminal**.
2. **Create a new Conda environment** with R and essential packages:

   .. code-block:: console

      conda create --name rstudio_env -c conda-forge r-base r-essentials

3. **Activate the environment**:

   .. code-block:: console

      conda activate rstudio_env

Installing RStudio
^^^^^^^^^^^^^^^^^^
1. **Install RStudio** from `conda-forge`:

   .. code-block:: console

      conda install -c conda-forge rstudio

2. **Verify the installation** by running:

   .. code-block:: console

      rstudio

   If RStudio opens without errors, the installation was successful!

Installing Additional R Packages
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

To install additional R packages, use R’s built-in `install.packages()` function. Open R within the Conda environment and run:

.. code-block:: r

   install.packages("ggplot2")
   library(ggplot2)

.. important::
   If package installation fails due to missing system dependencies, try using Conda to install them:

   .. code-block:: console

      conda install -c conda-forge r-ggplot2

Launching RStudio from the Conda Environment
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

1. **Ensure the Conda environment is active**:

   .. code-block:: console

      conda activate rstudio_env

2. **Launch RStudio**:

   .. code-block:: console

      rstudio

   The RStudio interface should open with the Conda environment’s R version.

Uninstalling RStudio and Cleaning Up
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

If you need to remove RStudio and the Conda environment, follow these steps:

1. **Deactivate the environment**:

   .. code-block:: console

      conda deactivate

2. **Remove the Conda environment**:

   .. code-block:: console

      conda remove --name rstudio_env --all

This ensures a clean removal of all installed packages within the environment.
